{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Scaleflex Task\\\\my_gallery\\\\src\\\\Components\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport leftArrow from '../imgs/left-arrow.png';\nimport close from '../imgs/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sliders(props) {\n  _s();\n\n  //save the index of the current image\n  const [current, setCurrent] = useState(props.index);\n  const count = props.Images.length; //get the index of the next image when click the right arrow\n\n  function nextImage() {\n    setCurrent(current === count - 1 ? 0 : current + 1);\n  } //get the index of the previous image when click the left arrow\n\n\n  function previousImage() {\n    setCurrent(current === 0 ? count - 1 : current - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"closeIcon\",\n      src: close,\n      onClick: props.close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"rightArrow\",\n      src: leftArrow,\n      onClick: nextImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), //search for the required image to display it in the slider\n    props.Images.map((img, index) => {\n      if (current === index) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"imageName\",\n          children: img.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"SlideImage\",\n          src: img.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${index + 1} / ${count}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }, this);else return null;\n    }), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"leftArrow\",\n      src: leftArrow,\n      onClick: previousImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sliders, \"dCPMy0P/p4KLy9Lskblf5bzRGM8=\");\n\n_c = Sliders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sliders\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/Scaleflex Task/my_gallery/src/Components/Slider.js"],"names":["useState","leftArrow","close","Sliders","props","current","setCurrent","index","count","Images","length","nextImage","previousImage","map","img","name","url"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AAElC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAK,CAACG,KAAP,CAAtC;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACK,MAAN,CAAaC,MAA3B,CAJkC,CAMlC;;AACA,WAASC,SAAT,GAAoB;AACjBL,IAAAA,UAAU,CAACD,OAAO,KAAKG,KAAK,GAAC,CAAlB,GAAsB,CAAtB,GAA0BH,OAAO,GAAC,CAAnC,CAAV;AACF,GATiC,CAWlC;;;AACA,WAASO,aAAT,GAAwB;AACpBN,IAAAA,UAAU,CAACD,OAAO,KAAK,CAAZ,GAAgBG,KAAK,GAAC,CAAtB,GAA0BH,OAAO,GAAC,CAAnC,CAAV;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEH,KAAhC;AAAuC,MAAA,OAAO,EAAEE,KAAK,CAACF;AAAtD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAED,SAAjC;AAA4C,MAAA,OAAO,EAAEU;AAArD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQ;AACAP,IAAAA,KAAK,CAACK,MAAN,CAAaI,GAAb,CAAiB,CAACC,GAAD,EAAKP,KAAL,KAAa;AAC1B,UAAGF,OAAO,KAAKE,KAAf,EACI,oBACI;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BO,GAAG,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAED,GAAG,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAK,GAAET,KAAK,GAAC,CAAE,MAAKC,KAAM;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,KASA,OAAO,IAAP;AACH,KAXD,CALR,eAkBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEP,SAAhC;AAA2C,MAAA,OAAO,EAAEW;AAApD;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAtCuBT,O;;KAAAA,O","sourcesContent":["import {useState} from 'react'\r\nimport leftArrow from '../imgs/left-arrow.png'\r\nimport close from '../imgs/close.png'\r\n\r\nexport default function Sliders(props){\r\n\r\n    //save the index of the current image\r\n    const [current, setCurrent] = useState(props.index)\r\n    const count = props.Images.length\r\n\r\n    //get the index of the next image when click the right arrow\r\n    function nextImage(){\r\n       setCurrent(current === count-1 ? 0 : current+1);\r\n    }\r\n\r\n    //get the index of the previous image when click the left arrow\r\n    function previousImage(){\r\n        setCurrent(current === 0 ? count-1 : current-1);\r\n    }\r\n\r\n    return(\r\n        <div className=\"slider\">\r\n            <img className='closeIcon' src={close} onClick={props.close}/>\r\n            <img className='rightArrow' src={leftArrow} onClick={nextImage}/>\r\n            {\r\n                //search for the required image to display it in the slider\r\n                props.Images.map((img,index)=>{\r\n                    if(current === index)\r\n                        return(\r\n                            <div>\r\n                                <p className='imageName'>{img.name}</p>\r\n                                <img className='SlideImage' src={img.url}/>\r\n                                <p>{`${index+1} / ${count}`}</p>\r\n                            </div>\r\n                        )\r\n                    else \r\n                    return null;\r\n                })\r\n            }\r\n            <img className='leftArrow' src={leftArrow} onClick={previousImage}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}