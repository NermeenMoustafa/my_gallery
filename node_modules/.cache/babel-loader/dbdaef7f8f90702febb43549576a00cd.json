{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\Scaleflex Task\\\\my_gallery\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport Image from \"./Components/Image\";\nimport Slider from \"./Components/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  //save the images from backend\n  const [images, setImages] = useState([]); //close/open the carousel modal\n\n  const [close, setClose] = useState(false); //save the index of the clicked image \n\n  const [slide, setSlide] = useState(5); //import images from backend and save them in \"images\"\n\n  react.useEffect(() => {\n    fetch(\"https://scaleflex.cloudimg.io/v7/0.fe_task_static/pictures.json?vh=7a646d&func=proxy\").then(res => res.json()).then(data => setImages(data));\n  }, []); //this function is called when image is clicked.\n  //it gets the index of the image as a parameter then...\n  //open the carousel model by changing the value with \"setClose(true)\"\n  //pass the index of the clicked image to the slider\n\n  function ShowImage(ind) {\n    setClose(true);\n    setSlide(ind);\n  } //map the images and it's info to the Image component\n\n\n  const Images = images.map((img, index) => {\n    return /*#__PURE__*/_jsxDEV(Image, {\n      src: img.url,\n      id: img.uuid,\n      visible: false,\n      showImage: () => ShowImage(index)\n    }, img.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: Images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), //this div will appear only if the close have true value to show the slider\n    close && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderContainer\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        Images: images,\n        index: slide,\n        close: () => setClose(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"h2+N6RG+ySoZUCzXZLbGpICqMJA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/Scaleflex Task/my_gallery/src/App.js"],"names":["react","useState","Image","Slider","App","images","setImages","close","setClose","slide","setSlide","useEffect","fetch","then","res","json","data","ShowImage","ind","Images","map","img","index","url","uuid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AAEzB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAHyB,CAIzB;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC,CALyB,CAMzB;;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC,CAPyB,CASzB;;AACAD,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAK;AACjBC,IAAAA,KAAK,CAAC,sFAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIV,SAAS,CAACU,IAAD,CAFvB;AAGH,GAJD,EAIG,EAJH,EAVyB,CAgBzB;AACA;AACA;AACA;;AACA,WAASC,SAAT,CAAmBC,GAAnB,EAAuB;AACnBV,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,QAAQ,CAACQ,GAAD,CAAR;AACH,GAvBwB,CAyBzB;;;AACA,QAAMC,MAAM,GAAGd,MAAM,CAACe,GAAP,CACX,CAACC,GAAD,EAAKC,KAAL,KAAc;AACV,wBACI,QAAC,KAAD;AACQ,MAAA,GAAG,EAAED,GAAG,CAACE,GADjB;AAEQ,MAAA,EAAE,EAAEF,GAAG,CAACG,IAFhB;AAGQ,MAAA,OAAO,EAAE,KAHjB;AAIQ,MAAA,SAAS,EAAI,MAAKP,SAAS,CAACK,KAAD;AAJnC,OAAYD,GAAG,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GAVU,CAAf;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EAKQ;AACAZ,IAAAA,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACT,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEF,MAAhB;AAAwB,QAAA,KAAK,EAAEI,KAA/B;AAAsC,QAAA,KAAK,EAAE,MAAID,QAAQ,CAAC,KAAD;AAAzD;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GApDuBJ,G;;KAAAA,G","sourcesContent":["import react, {useState} from \"react\"\r\nimport Image from \"./Components/Image\"\r\nimport Slider from \"./Components/Slider\"\r\n\r\nexport default function App(){\r\n\r\n    //save the images from backend\r\n    const [images, setImages] = useState([])\r\n    //close/open the carousel modal\r\n    const [close, setClose] = useState(false)\r\n    //save the index of the clicked image \r\n    const [slide, setSlide] = useState(5)\r\n\r\n    //import images from backend and save them in \"images\"\r\n    react.useEffect(() =>{\r\n        fetch(\"https://scaleflex.cloudimg.io/v7/0.fe_task_static/pictures.json?vh=7a646d&func=proxy\")\r\n        .then(res => res.json())\r\n        .then(data => setImages(data))\r\n    }, [])\r\n\r\n    //this function is called when image is clicked.\r\n    //it gets the index of the image as a parameter then...\r\n    //open the carousel model by changing the value with \"setClose(true)\"\r\n    //pass the index of the clicked image to the slider\r\n    function ShowImage(ind){\r\n        setClose(true)\r\n        setSlide(ind)      \r\n    }\r\n\r\n    //map the images and it's info to the Image component\r\n    const Images = images.map(\r\n        (img,index) =>{\r\n            return(\r\n                <Image key={img.uuid}\r\n                        src={img.url}\r\n                        id={img.uuid}\r\n                        visible={false}\r\n                        showImage = {()=> ShowImage(index)}\r\n                />\r\n            )           \r\n        }\r\n    )\r\n\r\n    return(\r\n        <div className=\"mainBody\">\r\n            <div className=\"container\">\r\n                {Images}\r\n            </div>\r\n            {\r\n                //this div will appear only if the close have true value to show the slider\r\n                close && <div className=\"sliderContainer\">\r\n                <Slider Images={images} index={slide} close={()=>setClose(false)}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}