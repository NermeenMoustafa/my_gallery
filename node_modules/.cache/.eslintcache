[{"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\Components\\Image.js":"3","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\Components\\Slider.js":"4","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\index.js":"5","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\App.js":"6","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\Components\\Image.js":"7","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\Components\\Slider.js":"8"},{"size":156,"mtime":1644676163993,"results":"9","hashOfConfig":"10"},{"size":1906,"mtime":1650551344958,"results":"11","hashOfConfig":"10"},{"size":1014,"mtime":1650551330509,"results":"12","hashOfConfig":"10"},{"size":1566,"mtime":1650551311071,"results":"13","hashOfConfig":"10"},{"size":156,"mtime":1644676163993,"results":"14","hashOfConfig":"15"},{"size":1906,"mtime":1650551344958,"results":"16","hashOfConfig":"15"},{"size":1014,"mtime":1650551330509,"results":"17","hashOfConfig":"15"},{"size":1566,"mtime":1650551311071,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1159pu3",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1avgb41",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\index.js",[],[],"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\App.js",[],[],"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\Components\\Image.js",["45"],[],"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\src\\Components\\Slider.js",["46","47","48","49"],[],"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\index.js",[],[],"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\App.js",[],[],"C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\Components\\Image.js",["50"],[],"import {useState} from 'react';\r\nimport zoom from '../imgs/zoom.png'\r\n\r\nexport default function Image(props){\r\n\r\n    const imageStyles={\r\n        //set the background-image to the received image from props\r\n        backgroundImage : `URL(${props.src})`\r\n    }\r\n\r\n    //show/hide zoom icon based on hovering\r\n    const [icon, setIcon] = useState(props.visible)\r\n\r\n    return(\r\n        <div \r\n            style={imageStyles}    \r\n            className=\"image\" \r\n            //show zoom icon when hover\r\n            onMouseEnter={()=>setIcon(true)}\r\n            //hide zoom icon \r\n            onMouseLeave={()=>setIcon(false)} >\r\n           {\r\n               //if icon value is true then display this div and the icon\r\n               icon && \r\n               <div className='zoomContainer' onClick={props.showImage}>\r\n                   <div className = \"zoomIconDiv\"></div>\r\n                   <img src={zoom} className=\"zoomIcon\"></img>               \r\n                </div>\r\n           }\r\n        </div>\r\n    )\r\n}","C:\\Users\\pc\\Desktop\\Scaleflex Task\\my_gallery\\my_gallery\\src\\Components\\Slider.js",["51","52","53","54"],[],"import {useState} from 'react'\r\nimport leftArrow from '../imgs/left-arrow.png'\r\nimport close from '../imgs/close.png'\r\n\r\nexport default function Sliders(props){\r\n\r\n    //save the index of the current image\r\n    const [current, setCurrent] = useState(props.index)\r\n    const count = props.Images.length\r\n\r\n    //get the index of the next image when click the right arrow\r\n    function nextImage(){\r\n       setCurrent(current === count-1 ? 0 : current+1);\r\n    }\r\n\r\n    //get the index of the previous image when click the left arrow\r\n    function previousImage(){\r\n        setCurrent(current === 0 ? count-1 : current-1);\r\n    }\r\n\r\n    return(\r\n        <div className=\"slider\">\r\n            <img className='closeIcon' src={close} onClick={props.close}/>\r\n            <img className='rightArrow' src={leftArrow} onClick={nextImage}/>\r\n            {\r\n                //search for the required image to display it in the slider\r\n                props.Images.map((img,index)=>{\r\n                    if(current === index)\r\n                        return(\r\n                            <div>\r\n                                <p className='imageName'>{img.name}</p>\r\n                                <img className='SlideImage' src={img.url}/>\r\n                                <p>{`${index+1} / ${count}`}</p>\r\n                            </div>\r\n                        )\r\n                    else \r\n                    return null;\r\n                })\r\n            }\r\n            <img className='leftArrow' src={leftArrow} onClick={previousImage}/>\r\n        </div>\r\n    )\r\n}",{"ruleId":"55","severity":1,"message":"56","line":27,"column":20,"nodeType":"57","endLine":27,"endColumn":57},{"ruleId":"55","severity":1,"message":"56","line":23,"column":13,"nodeType":"57","endLine":23,"endColumn":75},{"ruleId":"55","severity":1,"message":"56","line":24,"column":13,"nodeType":"57","endLine":24,"endColumn":78},{"ruleId":"55","severity":1,"message":"56","line":32,"column":33,"nodeType":"57","endLine":32,"endColumn":76},{"ruleId":"55","severity":1,"message":"56","line":40,"column":13,"nodeType":"57","endLine":40,"endColumn":81},{"ruleId":"55","severity":1,"message":"56","line":27,"column":20,"nodeType":"57","endLine":27,"endColumn":57},{"ruleId":"55","severity":1,"message":"56","line":23,"column":13,"nodeType":"57","endLine":23,"endColumn":75},{"ruleId":"55","severity":1,"message":"56","line":24,"column":13,"nodeType":"57","endLine":24,"endColumn":78},{"ruleId":"55","severity":1,"message":"56","line":32,"column":33,"nodeType":"57","endLine":32,"endColumn":76},{"ruleId":"55","severity":1,"message":"56","line":40,"column":13,"nodeType":"57","endLine":40,"endColumn":81},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]